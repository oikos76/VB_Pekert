<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cariFolder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAtBJREFUOE/N
        kGlI02Ecx/94lCh0EAS+iEoisxdZFppnEoalqIkYpSzFjilekxQqjzITm6nJVIbTRFvhrU1bOW9Tcl5T
        dyVuHss5HerUqYgHfvs7B/Um8GUf+L54ft/f54HnIf4fiooqzdgf261rayUe+tH+sLV1MAyjfZ2r4E6g
        rX8e34e0uGBDrdLXu5gSxOHzBoZnPA0MLT31sz+EPMwKlc9uQ6begujXBvrl62gZWAUtnqd6kSnepBeM
        gVGmApOjwd1Q7vali1ZmenWP9Kw21k/VFgTj6+geWUPb8Aq+9S6jjr+C8nYNihrmwahWI71cDa8gzubp
        U/aOvBaFT3GpKHZatXyESHpVky0Y20CXZBXNg1p84S+hqkMDduMCGJXToOeLUVgxCnaNDJxW5U7f6Ppq
        p2hZS88XTi1q1oyJuKflKR3iNfD6teB0L+F93QxSmFIk50nwtkCMnhEtmgc0qOcvoKxJtfOpSTVb0qie
        oTN6E3RPoIYz4rg9WtR2LeENU4iKBgX5Bxo09GpQ0zkHNm8WrHoVcmqUSGOP7yQXyyfvxAvkwqFpc90F
        wQ8ywkpbF5FTrkBhrQKlLWoUclXIrZ5CepkCKSWTeM4aAyVViusRfbCidIrcg3lMnbzLvYCXgaz6eTx7
        J0R2tRKvPyiQWDiBJ3ljiMyWwT9JDIfwATIC2D3iwzKgfeRzndRerxOEr2+Md2bpLMJSBIjOlYGaOYKg
        NCn8EiW4FiXQiU4Rg3COHITd4z7Y+Na16tU9vH1orknMSXjH8HE7QQz32GG4Rg3CkRSdo4bICOFCk8Ip
        SoorAV3w8ksI0qt73LpJuUyJ64VT5O4ymWgRXKJJIUKMq4GdsHLNVJpb+HNMTU7SyHXrPesvPDzuW7qF
        /IBzuAh2d5tx1iF14vgJrwqTA+ZUsj5H5qBu8V+43XA3PHTUMcPY6BiFPFqQMdIV+4IgfgOZoqwLd7q9
        eAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdBackup.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAf9JREFUOE+F
        089PE0EUB/D3X/B/ePDgwXjiZoiiEwgehJBwwINKUl0o1ujBAx5MvFQSlDbtbrtdCjRS2tLftpYuS6W1
        xqrV4kLL9gel7UFvPGc3DSebmeRzejPfvPeSgRGTC25wEowueIFYfANsGvWb3Bq9L8KVSStcHGIWh67P
        8bZRziPempcG0uvD92zPZpa2YeTBav81PRPc6qTp7R5OvUox3X2xfW62huGOmYdrMytwdXoZ4Plrx4Rc
        qmGyoDJJIRmXnGmYfbkF40/paIvrADZeIL1eB9vtFlOxWMAxy6Zh3LLxd4zjL4MouUi328FWq8H0uZjH
        WatsWHTmceqJfZoGCKR9dopavcaULxzQoKah0znDNzaegNvDkyZNP66pTAf53MU4vV4XBY+bgEt0Eq1R
        w0P1J1Puk4LNZt2gdyB5RQK820Gq2hGWK9+YlJyMJ1rVcEq78Ky5CDgEO1Grh1gqf2GSlV08ond1jZaG
        +v6AplzKZNN/skoGWeLJKFZ+lw1avYr6/iAcC0EyHYdkKgZ7+7ug7Gfxx68SU/VERYGOD485EyyYOVh5
        twyxZARkJXP+9XsRWdTjCjoF++3+jwDg5h9B4kMUvBuSJZaIiLRdMTFAnNYDQb/NH/AN9Z8DPJy7D+/9
        PtiJBCEa3zFGSn1M/BcNgHA0CIHQFvwD9YrfV+0dKWcAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 50</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>188, 50</value>
  </metadata>
</root>